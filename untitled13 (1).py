# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xsRIGd8mzRFYrTEL9WcH5yqnZ4qXcHhS
"""

import streamlit as st
import numpy as np
from scipy.stats import norm
from scipy.optimize import brentq

# Função Black-Scholes para preço da opção de compra (call)
def black_scholes_call(S, K, T, r, sigma):
    d1 = (np.log(S / K) + (r + 0.5 * sigma ** 2) * T) / (sigma * np.sqrt(T))
    d2 = d1 - sigma * np.sqrt(T)
    return S * norm.cdf(d1) - K * np.exp(-r * T) * norm.cdf(d2)

# Função para calcular volatilidade implícita
def implied_volatility_call(price, S, K, T, r):
    func = lambda sigma: black_scholes_call(S, K, T, r, sigma) - price
    try:
        return brentq(func, 1e-6, 5)
    except ValueError:
        return np.nan

st.title('Calculadora de Opções & Volatilidade Implícita')

st.sidebar.header('Parâmetros')
S = st.sidebar.number_input('Preço do ativo (S)', value=100.0, step=0.1)
K = st.sidebar.number_input('Strike (K)', value=100.0, step=0.1)
T = st.sidebar.number_input('Tempo até vencimento (anos)', value=0.5, step=0.01)
r = st.sidebar.number_input('Taxa livre de risco (r)', value=0.13, step=0.01)
sigma = st.sidebar.number_input('Volatilidade anual (σ)', value=0.2, step=0.01)
opcao = st.sidebar.selectbox('Cálculo', ['Preço da opção', 'Volatilidade implícita'])

if opcao == 'Preço da opção':
    price = black_scholes_call(S, K, T, r, sigma)
    st.write(f'**Preço da opção de compra (call):** R$ {price:.2f}')
elif opcao == 'Volatilidade implícita':
    market_price = st.sidebar.number_input('Preço de mercado da opção (call)', value=10.0, step=0.1)
    imp_vol = implied_volatility_call(market_price, S, K, T, r)
    if np.isnan(imp_vol):
        st.write('Não foi possível encontrar uma volatilidade implícita válida para os parâmetros fornecidos.')
    else:
        st.write(f'**Volatilidade implícita:** {imp_vol:.2%}')